
* {
	box-sizing: border-box;
}

body{
	font-family: helvetica;
	font-size: 14px;
  color: #333;
  margin: 3em 16px 0 16px;
  background: #eaeaea;
  overflow: hidden;
}

.background-image{
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

.content{
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.content .menu{
  position: absolute;
  right: 16%;
  top: 16%;

}

h1{
  font-size: 3em;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 1);
  color: #efefef;
}

.main-view{
  position: relative;
  margin-top: 4rem;
}

.nav-tabs li.active a, .nav-tabs li.active a:hover{
	color: #fff;
background-color: #428bca;
border-color: #428bca;

}

.app-bar{
  background-color: #3f51b5;
  color: rgba(255, 255, 255, 0.87);
  height: 3em;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
  line-height: 3em;
  padding: 0 1em;
  font-size: 1.3em;
}

.level-one-paper{
-webkit-box-shadow: 1px 1px 3px 0px rgba(50, 50, 50, 0.39);
-moz-box-shadow:    1px 1px 3px 0px rgba(50, 50, 50, 0.39);
box-shadow:         1px 1px 3px 0px rgba(50, 50, 50, 0.39);
}


/* Set up transition for the DOM element that will be animated */
.tab-content{
overflow: hidden;
 left: 1rem;
 right: 1rem;
top: auto;
  padding: 2rem;
  
	position: absolute; /* To avoid 'jumping' elements*/
 	-webkit-transition:all .5s ease-in-out;
    -moz-transition:all .5s ease-in-out;
    -o-transition:all .5s ease-in-out;
    transition:all .5s ease-in-out;
    background: white;
}

/* This is the state of the content when it's first added to the DOM */
.tab-content.ng-enter{
  opacity: 0;
  -webkit-transform:scale3d(0.5, 0.5, 0.5);
  -moz-transform:scale3d(0.5, 0.5, 0.5);
  transform:scale3d(0.5, 0.5, 0.5);
}

/* This is the state of the content when it's set to be removed from the DOM */
.tab-content.ng-leave{
 opacity: 1; 
  -webkit-transform:translate3d(0, 0, 0);
  -moz-transform:translate3d(0, 0, 0);
  transform:translate3d(0, 0, 0);
}

/* This is the end-state of the content when its animation is done.
	The Transition will go from ng-enter to ng-enter-active when the content is added */
.tab-content.ng-enter-active{
 opacity: 1;
  -webkit-transform:scale3d(1, 1, 1);
  -moz-transform:scale3d(1, 1, 1);
  transform:scale3d(1, 1, 1);
}

/*  This is the end-state of the content when its animation is done.
	The Transition will go from ng-leave to ng-leave-active when the content is added.
	When this state is reached, the element is removed from the DOM */
.tab-content.ng-leave-active{
 opacity: 0;
  -webkit-transform:translate3d(100px, 0, 0);
  -moz-transform:translate3d(100px, 0, 0);
  transform:translate3d(100px, 0, 0);
}
.control-group{
  width: 100%;
}

.control-group .form-control-label{
  display: block;
  margin-bottom: 4px;
  color: #888;
}

.control-group .form-control{
  width: 100%;
  border-width: 0 0 1px 0;
  border-color: #ccc;
  font-size: 14pt;
  line-height: 20pt;
  padding: 4px 0;

    -webkit-transition:all .2s ease-in-out;
    -moz-transition:all .2s ease-in-out;
    -o-transition:all .2s ease-in-out;
    transition:all .2s ease-in-out;
}

.sr-only{
  visibility: hidden;
  font-size:0;
  display: inline;
}

[placeholder]::-webkit-input-placeholder {
    transition:all .3s cubic-bezier(.02,.92,.27,.97);
    font-size: 0.8em;
}

.control-group .form-control:focus::-webkit-input-placeholder {
  transform: translateY(-1.7em);

}

.control-group .form-control:focus:-moz-placeholder { /* Firefox 18- */
}

.control-group .form-control:focus::-moz-placeholder {  /* Firefox 19+ */
}

.control-group .form-control:focus:-ms-input-placeholder {  
}

.control-group .form-control:focus{
  outline: none;
  border-width: 0 0 1px 0;

border-color: #555;
}
